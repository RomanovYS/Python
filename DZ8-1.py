# 1) Определение количества различных подстрок с использованием хеш-функции. Пусть на вход функции дана строка.
# Требуется вернуть количество различных подстрок в этой строке.
# Примечание: в сумму не включаем пустую строку и строку целиком.
# Пример работы функции:
# func("papa")
# 6
# func("sova")
# 9

import hashlib


def func(in_str):
    hash_set = set() # формируем множество для хешей
    l = len(in_str) + 1 # вычисляем длиину цикла перебора срезов
    for i in range(l): # запускаем цикл
        for j in range(i, l): # и внутренний управляемый цикл
            slice = s[i:j] # получаем срез строки
            if not (slice == in_str or slice == ''): # если срез не равен оригиналу или пустой строке
                tmp = hashlib.sha1(slice.encode('utf-8')).hexdigest() # вычисляем для среза хеш-функцию
                if tmp not in hash_set: # если такой хеш отсутсвует во множестве
                    hash_set.add(tmp) # добавляем его во множество
                    # print(slice, tmp)
    return len(hash_set) # в конце всех циклов возвращаем количество элементов во множестве (уникальные хеши)


# s = input('Введите строку: ')
s = 'papa'
print('В строке - {}, подстрок: {}'.format(s, func(s)))
s = 'sova'
print('В строке - {}, подстрок: {}'.format(s, func(s)))
